apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    flavorDimensions "default"
    defaultConfig {
        applicationId "com.hwc.yunweimenhu"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "d74cac5d49cfee3dfff21cda", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile rootProject.file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
        }
    }
    buildTypes {
        //调试版本，无混淆
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            applicationVariants.all {
                variant ->
                    variant.outputs.all { output ->
                        outputFileName = '运维门户-v-' + rootProject.ext.android.versionName + "-" + getDate() + '.apk'
                    }
            }

        }
        //发布版本，有混淆
        release {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = '运维门户-v-' + rootProject.ext.android.versionName + "-" + getDate() + '.apk'
                }
            }
        }
    }
    productFlavors {
        //开发环境
        develop {
            buildConfigField "String", "BASEURL", URLDEVELOP
            resValue "string", "app_name", "运维门户（开发）"
        }
        //测试环境
        check {
            buildConfigField "String", "BASEURL", URLCHECK
            resValue "string", "app_name", "运维门户（测试）"
        }
        //生产环境
        product {
            buildConfigField "String", "BASEURL", URLPRODUCT
            resValue "string", "app_name", "运维门户"
        }

    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//获取时间
def getDate() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC")) + "-" + new Date().getTime();
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // android support 支持包
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["constraint"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["cardview"]
    implementation rootProject.ext.dependencies["annotations"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["multidex"]


    // 控件绑定 注解
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-Processor"]

    // base 库
    implementation project(':AndroidBase')

    // banner 广告
    implementation rootProject.ext.dependencies["banner"]

    //下拉刷新上拉加载
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]

    // recycleView 适配器封装
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]

    // 权限
    implementation rootProject.ext.dependencies["grantor"]

    // json 解析
    implementation rootProject.ext.dependencies["gson"]

    // 图片加载
    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-Processor"]
    implementation rootProject.ext.dependencies["glide-transformations"]

    // 网络请求
    implementation rootProject.ext.dependencies["okhttp"]

    // okgo 请求框架
    implementation rootProject.ext.dependencies["okgo"]

    // event 通讯
    implementation rootProject.ext.dependencies["eventbus"]

    //压缩图片
    implementation rootProject.ext.dependencies["tiny"]

    // json 解析
    implementation rootProject.ext.dependencies["fastjson"]

    //动画
    implementation rootProject.ext.dependencies["nineoldandroids"]

    //图片选择
    implementation rootProject.ext.dependencies["PictureSelector"]

    //七牛
    implementation rootProject.ext.dependencies["qiniu-android-sdk"]

    //状态栏
    implementation rootProject.ext.dependencies["barlibrary"]
    //    //地图
    //    implementation rootProject.ext.dependencies["location"]
    //    implementation rootProject.ext.dependencies["search"]
    //    implementation rootProject.ext.dependencies["3dmap"]
    //支付
    implementation files('libs/alipaySdk-20180403.jar')
    //banner
    implementation 'com.zhy:magic-viewpager:1.0.1'
    //极光推送
    implementation 'cn.jiguang.sdk:jpush:3.1.5'  // 此处以JPush 3.1.5 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.2.3'  // 此处以JCore 1.2.3 版本为例。

    implementation rootProject.ext.dependencies["wechat"]
    implementation rootProject.ext.dependencies["pickView"]

    implementation rootProject.ext.dependencies["scanplus"]
    implementation rootProject.ext.dependencies["AndroidFilePicker"]
    implementation rootProject.ext.dependencies["PhotoPick-Master"]
}